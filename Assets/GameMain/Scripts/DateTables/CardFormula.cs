
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class CardFormula : Luban.BeanBase
{
    public CardFormula(JSONNode _buf) 
    {
        { if(!_buf["id"].IsString) { throw new SerializationException(); }  Id = _buf["id"]; }
        { var __json0 = _buf["formula"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; Formula = new int[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Formula[__index0++] = __v0; }   }
        { if(!_buf["result"].IsNumber) { throw new SerializationException(); }  Result = _buf["result"]; }
        { var __json0 = _buf["weights"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; Weights = new int[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Weights[__index0++] = __v0; }   }
        { if(!_buf["speedTime"].IsNumber) { throw new SerializationException(); }  SpeedTime = _buf["speedTime"]; }
        { if(!_buf["num"].IsNumber) { throw new SerializationException(); }  Num = _buf["num"]; }
    }

    public static CardFormula DeserializeCardFormula(JSONNode _buf)
    {
        return new CardFormula(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public readonly string Id;
    /// <summary>
    /// 公式-卡牌(自动获取)
    /// </summary>
    public readonly int[] Formula;
    /// <summary>
    /// 发放卡牌(自动获取)
    /// </summary>
    public readonly int Result;
    /// <summary>
    /// 公式-卡牌数量
    /// </summary>
    public readonly int[] Weights;
    /// <summary>
    /// 合成需要时间
    /// </summary>
    public readonly float SpeedTime;
    /// <summary>
    /// 发放数量
    /// </summary>
    public readonly int Num;
   
    public const int __ID__ = 1559594006;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "formula:" + Luban.StringUtil.CollectionToString(Formula) + ","
        + "result:" + Result + ","
        + "weights:" + Luban.StringUtil.CollectionToString(Weights) + ","
        + "speedTime:" + SpeedTime + ","
        + "num:" + Num + ","
        + "}";
    }
}

}
